---
import seo from '../data/seo.js'
import type { SEO } from '../data/seo.js'

export interface Props extends Partial<SEO> { }

const {
  description = seo.description,
  image = seo.image,
  canonicalURL = new URL(Astro.url.pathname, Astro.site),
  twitter,
  noindex = false,
  nofollow = false,
} = Astro.props

const title = [Astro.props.title, seo.title].filter(Boolean).join(' | ')

const robots = [noindex ? 'noindex' : 'index', nofollow ? 'nofollow' : 'follow'].join(', ')
---

<meta charset="utf-8" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<meta name="viewport" content="width=device-width" />
<meta name="generator" content={Astro.generator} />
<title>{title}</title>
<meta name="description" content={description} />
<link rel="canonical" href={canonicalURL} />
<meta name="robots" content={robots} />

<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={image} />
<meta property="og:site_name" content={seo.title} />

{twitter?.card && <meta name="twitter:card" content={twitter.card} />}
{twitter?.site && <meta name="twitter:site" content={twitter.site} />}
{twitter?.creator && <meta name="twitter:creator" content={twitter.creator} />}

<!-- inlining the theme check in the head to make sure the theme is set before the page renders -->
<script is:inline>
  const themeMql = matchMedia('(prefers-color-scheme: dark)')
  // use storage if it was set, otherwise follow the browser preferences
  document.documentElement.dataset.theme =
    'theme' in localStorage ? localStorage.theme : themeMql.matches ? 'dark' : 'light'
  // automatically update when the browser preference changes
  themeMql.addEventListener('change', (event) => {
    localStorage.theme = document.documentElement.dataset.theme = event.matches ? 'dark' : 'light'
  })
  const menuMql = matchMedia('(min-width: 768px)')
  const onMenuMql = (event) => {
    document.documentElement.dataset.menuOpen = event.matches
  }
  // hide the menu on load for mobile devices
  onMenuMql(menuMql)
  // hide the menu when the screen shrinks below the mobile breakpoint
  menuMql.addEventListener('change', onMenuMql, true)
</script>
